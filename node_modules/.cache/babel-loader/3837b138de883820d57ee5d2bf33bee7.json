{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\OneDrive\\\\Desktop\\\\Web design challenge\\\\Workshop\\\\React Netflix\\\\my-app\\\\src\\\\Components\\\\RowPost\\\\RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport './RowPost.css';\nimport axios from '../../axios';\nimport { API_KEY, imageUrl } from '../../constants/constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log('rowPost:', response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      alert(err);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  const handleMovie = id => {\n    console.log(id);\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data);\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      } else {\n        console.log('Array empty');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          handleMovie(obj.id);\n        },\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"Poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), urlId && /*#__PURE__*/_jsxDEV(YouTube, {\n      opts: opts,\n      videoId: urldI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"ru/H/h4rDlmmYRwWvAxS3B+Rs2g=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","Youtube","axios","API_KEY","imageUrl","YouTube","RowPost","props","movies","setMovies","urlId","setUrlId","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path","urldI"],"sources":["C:/Users/krish/OneDrive/Desktop/Web design challenge/Workshop/React Netflix/my-app/src/Components/RowPost/RowPost.js"],"sourcesContent":["import React, { useEffect,useState} from 'react'\r\nimport Youtube from 'react-youtube'\r\nimport './RowPost.css'\r\nimport axios from '../../axios'\r\nimport {API_KEY,imageUrl} from '../../constants/constants'\r\nimport YouTube from 'react-youtube'\r\n\r\nfunction RowPost(props) {\r\n    const [movies,setMovies]=useState([])\r\n    const [urlId,setUrlId]=useState('')\r\n    useEffect(() => {\r\n      axios.get(props.url).then(response=>{\r\n        console.log('rowPost:',response.data)\r\n        setMovies(response.data.results)\r\n      }).catch((err=>{\r\n        alert(err)\r\n      }))\r\n    }, [])\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 0 \r\n        },\r\n      };\r\n\r\n      const handleMovie=(id)=>{\r\n     console.log(id)\r\n     axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\r\n        console.log(response.data)\r\n        if(response.data.results.length!==0){\r\n            setUrlId(response.data.results[0])\r\n        }else{\r\n            console.log('Array empty')\r\n        }\r\n     })\r\n      }\r\n    \r\n  return (\r\n    <div className='row'>\r\n        <h2>{props.title}</h2>\r\n        <div className='posters'>\r\n        {movies.map((obj)=>\r\n            <img onClick={()=>{handleMovie(obj.id)}} className={props.isSmall ? 'smallPoster' : 'poster'}  src={`${imageUrl+obj.backdrop_path}`} alt=\"Poster\" />\r\n\r\n        )}\r\n\r\n        </div>\r\n     {  urlId && <YouTube opts={opts} videoId={urldI}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,OAAO,EAACC,QAAQ,QAAO,2BAA2B;AAC1D,OAAOC,OAAO,MAAM,eAAe;AAAA;AAEnC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACpB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACnCD,SAAS,CAAC,MAAM;IACdG,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAACG,IAAI,CAAC;MACrCT,SAAS,CAACM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAE;MACbC,KAAK,CAACD,GAAG,CAAC;IACZ,CAAC,CAAE;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,IAAI,GAAG;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,WAAW,GAAEC,EAAE,IAAG;IACzBb,OAAO,CAACC,GAAG,CAACY,EAAE,CAAC;IACf3B,KAAK,CAACU,GAAG,CAAE,UAASiB,EAAG,mBAAkB1B,OAAQ,iBAAgB,CAAC,CAACW,IAAI,CAACC,QAAQ,IAAE;MAC/EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B,IAAGH,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACW,MAAM,KAAG,CAAC,EAAC;QAChCnB,QAAQ,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,MAAI;QACDH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC9B;IACH,CAAC,CAAC;EACD,CAAC;EAEL,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKV,KAAK,CAACwB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACvBvB,MAAM,CAACwB,GAAG,CAAEC,GAAG,iBACZ;QAAK,OAAO,EAAE,MAAI;UAACL,WAAW,CAACK,GAAG,CAACJ,EAAE,CAAC;QAAA,CAAE;QAAC,SAAS,EAAEtB,KAAK,CAAC2B,OAAO,GAAG,aAAa,GAAG,QAAS;QAAE,GAAG,EAAG,GAAE9B,QAAQ,GAAC6B,GAAG,CAACE,aAAc,EAAE;QAAC,GAAG,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAEvJ;MAAA;MAAA;MAAA;IAAA,QAEK,EACNzB,KAAK,iBAAI,QAAC,OAAO;MAAC,IAAI,EAAEa,IAAK;MAAC,OAAO,EAAEa;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEV;AAAC,GA9CQ9B,OAAO;AAAA,KAAPA,OAAO;AAgDhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}